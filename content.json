{"meta":{"title":"丁满博客 - Hexo博客","subtitle":"","description":"","author":"胖胖的丁满","url":"https://devloperhu.gitee.io","root":"/"},"pages":[{"title":"About","date":"2021-02-15T17:23:22.000Z","updated":"2021-02-15T17:23:22.360Z","comments":true,"path":"about/index.html","permalink":"https://devloperhu.gitee.io/about/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2021-02-15T17:10:21.000Z","updated":"2021-02-15T17:51:38.948Z","comments":true,"path":"categories/index.html","permalink":"https://devloperhu.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2021-02-15T17:46:47.000Z","updated":"2021-03-07T10:35:39.997Z","comments":true,"path":"guestbook/index.html","permalink":"https://devloperhu.gitee.io/guestbook/index.html","excerpt":"","text":"欢迎留言！"},{"title":"所有标签","date":"2021-02-15T17:30:07.000Z","updated":"2021-02-15T17:51:47.351Z","comments":true,"path":"tags/index.html","permalink":"https://devloperhu.gitee.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"工作中的总结（一）","slug":"工作中的总结","date":"2021-03-17T14:56:46.000Z","updated":"2021-03-17T15:28:54.545Z","comments":true,"path":"posts/16217.html","link":"","permalink":"https://devloperhu.gitee.io/posts/16217.html","excerpt":"","text":"简介最近公司需要批处理生成带T-1日期的sql脚本文件，百度了几个靠谱的方案，修改了各种bug后，记录一下。 生成T-1日期创建时间为T-1的文件： 1234567891011121314151617181920212223242526272829303132333435@echo off&amp;setlocal enabledelayedexpansionset yyyy=%date:~0,4%set mm=%date:~5,2%:: 将日期两位当做十进制来处理，避免08和09被当做八进制处理报错set dd1=%date:~8,1%set dd2=%date:~9,1%set dd=!dd1!*10+!dd2!echo 今天是：%date:~0,4%%date:~5,2%%date:~8,2%set /a od=!dd!-1:: 处理每个月1号特殊情况if !od!==0 call :dd0:: 处理每年一月的特殊情况if !mm!==0 call :mm0:: 对于1-9号进行补0处理if !od! lss 10 set od=0!od!echo 昨天是: !yyyy!!mm!!od!pauseexit:dd0set /a mm=!mm!-1for %%a in (1 3 5 7 8 10 12)do set %%add=31set /a pddd=!yyyy!*10/4set pd2d=!pddd:~-1,1!set 2dd=28if !pd2d!==0 set 2dd=29for %%b in (4 6 9 11)do set %%bdd=30set od=!%mm%dd!:: 对于1-9月进行补0处理if !mm! lss 10 if !mm! gtr 0 set mm=0!mm!goto :eof:mm0set /a yyyy=!yyyy!-1set mm=12set od=31goto :eof 遗留问题本次处理遗漏了百年整除400才算闰年的情况，即该代码会在2100年3月1日产生bug，当天会生成一个21000229的文件，其实这个日期是不存在的，不过到时，我们可能早已不存在了，万一bug真留到那个时候 ，还是修改一下的好，哈哈！毕竟2200年3月1日以及2300年3月1日也会产生该bug！~~~","categories":[],"tags":[{"name":"DOS","slug":"DOS","permalink":"https://devloperhu.gitee.io/tags/DOS/"}]},{"title":"微服务商城项目（二）","slug":"微服务商城项目（二）","date":"2021-03-09T13:10:29.000Z","updated":"2021-03-10T14:30:20.122Z","comments":true,"path":"posts/57973.html","link":"","permalink":"https://devloperhu.gitee.io/posts/57973.html","excerpt":"","text":"环境搭建安装 linux 虚拟机项目背景谷粒商城项目是B2C（Business to Consumer）模式，即常见的供应商直接将商品卖给用户，也就是通常说的商业零售，如京东商城。 项目技术&amp;特色 下载&amp;安装 VirtualBox，要进入BIOS开启 CPU 虚拟化 下载&amp;安装 Vagrant https://app.vagrantup.com/boxes/search Vagrant 官方镜像仓库 https://www.vagrantup.com/downloads.html Vagrant 下载 打开 window cmd 窗口，运行 Vagrant init centos/7，即可初始化一个 centos7 系统 运行 vagrant up 即可启动虚拟机。系统 root 用户的密码是 vagrant 下载虚拟机比较慢，建议下载到本地后直接使用 cd 到下载好的文件目录，执行命令： 1vagrant box add centos&#x2F;7 CentOS-7-x86_64-Vagrant-2004_01.VirtualBox.box vagrant ssh：自动使用 vagrant 用户连接虚拟机。 修改 Vagrantfile中的ip改为物理机对应的ip ip最后一位修改一下（ps：不然后面连接MySQL会有问题），然后重启 查看ip： 安装 docker&emsp;&emsp;虚拟化容器技术。Docker基于镜像，可以秒级启动各种容器。每一种容器都是一个完整的运行环境，容器之间互相隔离。 1、卸载系统之前的 12345678docker sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 2、安装 Docker-CE 安装必须的依赖 1sudo yum install -y yum-utils 设置 docker repo 的 yum 位置 123sudo yum-config-manager \\ --add-repo \\ https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo 安装 docker，以及 docker-cli 1sudo yum install docker-ce docker-ce-cli containerd.io 3、启动 docker 1sudo systemctl start docker 4、设置 docker 开机自启 1sudo systemctl enable docker 5、测试 docker 常用命令，注意切换到 root 用户下 https://docs.docker.com/engine/reference/commandline/docker/ 6、配置 docker 镜像加速 阿里云，容器镜像服务 针对 Docker 客户端版本大于 1.10.0 的用户 您可以通过修改 daemon 配置文件/etc/docker/daemon.json 来使用加速器 12345678sudo mkdir -p &#x2F;etc&#x2F;docker sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;&#123; &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;82m9ar63.mirror.aliyuncs.com&quot;]&#125; EOF sudo systemctl daemon-reload sudo systemctl restart docker docker安装MySQL1、下载镜像文件","categories":[{"name":"Linux","slug":"Linux","permalink":"https://devloperhu.gitee.io/categories/Linux/"}],"tags":[{"name":"谷粒商城","slug":"谷粒商城","permalink":"https://devloperhu.gitee.io/tags/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/"}]},{"title":"微服务商城项目（一）","slug":"微服务商城项目（一）","date":"2021-03-07T09:59:35.000Z","updated":"2021-03-09T13:33:16.770Z","comments":true,"path":"posts/29199.html","link":"","permalink":"https://devloperhu.gitee.io/posts/29199.html","excerpt":"","text":"前情提要&emsp;&emsp;最近在公司参与微服务配置中心参数管理项目，想着关于微服务理论知识了解不少，但是还并没有机会完全实践去打通整个流程，因此就参照尚硅谷的谷粒商城项目从头到尾进行一次微服务项目的实际搭建过程。 项目背景谷粒商城项目是B2C（Business to Consumer）模式，即常见的供应商直接将商品卖给用户，也就是通常说的商业零售，如京东商城。 项目技术&amp;特色 前后分离开发，并开发基于 vue 的后台管理系统 SpringCloud 全新的解决方案 应用监控、限流、网关、熔断降级等分布式方案全方位涉及 分布式事务、分布式锁等分布式系统的难点 分析高并发场景的编码方式，线程池，异步编排等使用 压力测试与性能优化 各种集群技术的区别以及使用 CI/CD 使用 项目架构图 项目微服务架构图 微服务划分图 分布式基础概念 微服务 &emsp;&emsp;微服务架构风格，就像是把一个单独的应用程序开发为一套小服务，每个小服务运行在自 己的进程中，并使用轻量级机制通信，通常是 HTTP API。这些服务围绕业务能力来构建， 并通过完全自动化部署机制来独立部署。这些服务使用不同的编程语言书写，以及不同数据 存储技术，并保持最低限度的集中式管理。 简而言之：拒绝大型单体应用，基于业务边界进行服务微化拆分，各个服务独立部署运行。 集群&amp;分布式&amp;节点 集群是个物理形态，分布式是个工作方式。 只要是一堆机器，就可以叫集群，他们是不是一起协作着干活，这个谁也不知道； 《分布式系统原理与范型》定义： “分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统” ，分布式系统（distributed system）是建立在网络之上的软件系统。 分布式是指将不同的业务分布在不同的地方。 集群指的是将几台服务器集中在一起，实现同一业务。 例如：京东是一个分布式系统，众多业务运行在不同的机器，所有业务构成一个大型的业务集群。每一个小的业务，比如用户系统，访问压力大的时候一台服务器是不够的。我们就应该将用户系统部署到多个服务器，也就是每一个业务系统也可以做集群化； 分布式中的每一个节点，都可以做集群。 而集群并不一定就是分布式的。 节点：集群中的一个服务器。","categories":[{"name":"微服务","slug":"微服务","permalink":"https://devloperhu.gitee.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"谷粒商城","slug":"谷粒商城","permalink":"https://devloperhu.gitee.io/tags/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/"}]},{"title":"如何快速搭建该博客","slug":"如何快速搭建该博客","date":"2021-02-21T15:46:13.000Z","updated":"2021-02-23T14:57:38.649Z","comments":true,"path":"posts/7720.html","link":"","permalink":"https://devloperhu.gitee.io/posts/7720.html","excerpt":"","text":"简介2021年02月21日晚更新。 基本环境 Window10 Node.js （点击进入官网下载） 在 Windows 环境下安装 Node.js 非常简单，仅须到官网下载安装文件并执行即可完成安装。 选择Add to PATH然后点Next继续就行了。 然后在终端我们分别执行下面的命令验证： 12node -vnpm -v 安装cnpm 在git bash里面执行下面的命令，并检查： 12npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgcnpm -v Git（点击进入官网下载） 这个大家基本都有的。 安装Hexo (版本4.2.1) 在任意盘新建hexo文件夹并右键，选择Bit Bash Here 输入安装hexo命令 1npm install -g hexo-cli 接下来我们对hexo 进行初始化 1hexo init 到Install dependencies的时候你可能会卡住，这是大多数人基本都会遇到的 我们只需要在这里的时候结束命令，按Ctrl + c就可以结束命令 然后执行下面这个命令，就可以使用国内的镜像为你完成博客的初始化工作 1cnpm install 然后执行下面这个命令 12hexo g 或者hexo generatehexo s 或者hexo server 这样就可以到http://localhost:4000/ 查看了 如何下载使用主题 打开主题的项目地址后，点击Clone or download，然后复制https开头的地址 执行： 1git clone 复制的地址 themes&#x2F;主题名字 我本次使用的为：volantis 使用主题 在博客的目录下有一个叫_config.yml的文件 找到themes这一行，然后将主题名字修改为你的主题名 1theme: volantis 再次执行，就能看到你设置的新主题了 配置主题我们需要认识两个文件 站点配置文件 指的是博客根目录下的_config.yml 主题配置文件 指的是某个主题下的_config.yml 它们的名字都叫_config.yml但是你不能弄混淆 在我们看主题文档配置的时候，是必须要分清这两个概念的，不然会报错","categories":[{"name":"Blog","slug":"Blog","permalink":"https://devloperhu.gitee.io/categories/Blog/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://devloperhu.gitee.io/tags/Blog/"}]},{"title":"第一篇博客","slug":"第一篇博客","date":"2021-02-15T16:13:02.189Z","updated":"2021-03-09T13:26:31.398Z","comments":true,"path":"posts/59448.html","link":"","permalink":"https://devloperhu.gitee.io/posts/59448.html","excerpt":"","text":"简介&emsp;&emsp;前年的6月，我从传统制造企业裸辞，学习Java开发，后进入了武汉的一家外包公司，负责网络通讯运维管理的Java后端开发。 &emsp;&emsp;转行的这一年半内，我不仅在实践中夯实了编程技术，同时也为了下一次跳槽额外地做了些准备和补充学习，工作到去年的12月份(2020.12)，我跳槽来到上海（女朋友也在上海）的一家银行外包公司。目前想记录下这些经历，为了之后自我回顾，也激励自己不断地学习下去，能早日进入大厂。 背景介绍：某末流211工科本科，17年毕业在某家客车企业做了两年的工艺工程师，后转行Java，在一家外包做了1年时间，现入职上海一家银行外包。 我的目标：没有特定的公司，但是一定是大厂。进入大厂这个目标在我转行的时候就确定了，当时我的想法是，不管怎么样，先进入一家公司工作一两年的时间，然后跳槽大厂。大厂我在心里就是一线的腾讯，百度，阿里，字节，华为，二线的新浪，滴滴等等…，我想表达的是，如果你有这个进入大厂的目标，那么就要下定决心，这样好帮助你提早做好准备规划。 大厂要掌握的技能：这个从招聘要求中看不出来，因为大厂的招聘要求都是比较虚的，比如什么要有热情之类的，这些对我们没有帮助，有帮助的信息其实在牛客网，牛客网面经分为社招和校招，我们主要看社招，校招的可以参考看看。经过广泛阅读和筛选，我把要做的准备分为这四个部分： 算法题：大厂面试必考算法题，需要花大量时间去学习数据结构和刷算法题。 后端技术：大致是Spring Boot、Spring Cloud、Dubbo、ZooKeeper、Redis、MySQL、Kafka、RocketMQ、Docker以及分布式各种知识。 基础知识：计算机网络、计算机安全、操作系统(Linux)。 深挖项目：项目的亮点。 技能准备 算法题算法题其实应该完整称为：数据结构与算法。 第一步就是要先学习数据结构，比如队列，栈，二叉树。队列和栈就需要掌握添加，删减，插入元素的代码，而二叉树要掌握前序，中序，后序遍历（递归版本和不递归版本都要会，对算法学习有帮助），另外，只需要了解二叉搜索树、平衡二叉搜索树、红黑树、N叉树的区别优缺点，至于他们怎么保证平衡太复杂了，没兴趣可以不学。 第二步学习算法，这里的算法指的是排序算法，请掌握冒泡、堆排、归并、桶排、快排，尤其是归并，归并的思想在后面刷算法题中经常用到，桶排也是如此，空间换时间的思想在算法中很常见。这些排序算法请能够理解并且默写，知道他们的时间和空间复杂度，这些是基础，必须掌握。 第三步真正的算法题，这里的算法题指的是牛客网剑指offer和Leetcode中的题目，这些题目不是单纯的让你排序那么简单，他可能是让你用队列实现一个栈，可能是让你求出二叉树的深度，可能让你算出跳台阶的方法….，里面用到的思想就有，归并，递归，KMP，动态规划等等(我用到的也就这么多…，还有什么广度优先，深度优先…)。 &emsp;&emsp;剑指offer可以认为是算法题入门，并不是说它很简单，而是他的解法很常见。Leetcode建议不要全部做，可以先去搜索各个大厂面经，把它们的算法题记下来，然后去Leetcode一个一个去刷，这样针对性是最强的。最后，什么时候学习算法呢？应该放在准备期间的后半段时间，因为算法题还是需要一些手感的，在求职的时候保持算法手感有一定作用。 后端技术&emsp;&emsp;Java主要的就是这些技术：大致是spring Boot、Spring Cloud、Dubbo、ZooKeeper、Redis、MySQL、Kafka、RocketMQ、Docker、分布式、JVM、并发编程。 &emsp;&emsp;Spring Cloud我是学习社交项目这个视频的，这个视频几乎包含了目前互联网企业常用的技术，其中必须要会的是redis、eureka、feign、docker、hystrix、zuul。掌握这些使用，应该要学习2个月时间。另外的比如mongDB、es、jenkins可以根据需要进行学习。其次vue可以学习一下，这种前端框架学习之后对理解目前的前端技术是有用的。Dubbo、ZooKeeper这两个和Spring Cloud是不同的微服务框架，需要单独学习。我是学习的尚硅谷这个视频，在学习Dubbo的时候其实就会涉及到ZooKeeper的使用，但是上面的视频中讲ZooKeeper比较浅显，深入学习ZooKeeper推荐看尚硅谷这个视频。这里再次感谢尚硅谷的优质的教程，帮助很大。 &emsp;&emsp;redis的话，大家在B站找个播放量高的效果大差不差。主要掌握redis 的基本数据结构、持久化、哨兵、集群、主从复制这几个关键点，另外推荐掌握zset的数据结构底层实现，编码方式，会是一个亮点。 &emsp;&emsp;MySQL需要额外了解日志系统、锁原理、索引原理、隔离、主从延时等等，帮助非常大。算是对于Mysql的进阶学习。 &emsp;&emsp;Kafka需要了解Kafka的Rebalance机制，主从同步机制，选主机制等等。 &emsp;&emsp;docker推荐尚硅谷的，对于docker不用特别精通，知道有docker这样的容器，他的作用是什么，优点是什么就行。 &emsp;&emsp;另外我是搞JAVA的，需要单独掌握JVM的知识，包括垃圾回收器的种类、垃圾回收算法、锁的底层实现原理、JMM内存模型…..另外还要学习并发编程，包括AQS，原生锁，乐观锁、线程池、LOCK、并发工具类….这些也可以从网上 找到相应的知识去学习。 &emsp;&emsp;分布式理论，这部分东西比较杂乱，包括基本的CAP、BASE理论，限流、降级、熔断、主从一致算法(raft，hash一致..)、分布式锁、分布式事务、缓存和数据库一致性问题、选主算法等等，没有固定一个教学视频，都是东找找，西找找拼凑起来的。 &emsp;&emsp;最后要说的是，这部分内容学什么要因人而异，我工作的项目微服务涉及较少，所以花了很多时间来掌握这些微服务的知识，如果你目前的公司业务中用到有这里的技术，那其实就可以省略掌握相应的部分。这部分的学习需要花费3-4个月的时间。 基础知识&emsp;&emsp;基础知识包括了计算机网络，比如TCP三次握手和四次挥手，五层结构，http报文结构，https请求过程等等；也包括了计算机安全，比如各种网络攻击XSS、跨域攻击、sql注入等等；也包括操作系统，比如内核态用户态的区别、进程怎么通讯、线程和进程的区别、IO的类型、多路复用等等。最后还包括Linux的常见命令。这些因为我不是计算机专业所以比较薄弱，花了一两个月时间进行学习，主要就是看面经然后找博客，进而拓展学习。 &emsp;&emsp;最后以上三点的内容学习完后，强推用这位同学的总结来检查自己学习的结果，你也可以根据这个总结来反推学习内容。当你能百分百回答上这些问题的时候，就差不多可以去面试了。 项目深挖&emsp;&emsp;这个因人而异了，回顾一年的工作，找出最亮眼的工作，亮眼的意思是，你独立完成，或者从无到有，或者提高性能多少，或者排查解决了什么重大生产事故等等。因为面试必会问“你做的最有挑战的一个技术难点是什么？你需要准备好。我的跳槽求职简历也是基于工作亮点来书写的。 &emsp;&emsp;最后，我始终觉得，不管有多大的目标，只要是做好时间规划，内容规划，然后咬牙坚持一步步走下去，最后一定会收获想要的东西。愿大家都能收获自己的果实。","categories":[{"name":"杂记","slug":"杂记","permalink":"https://devloperhu.gitee.io/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-02-14T15:24:05.674Z","updated":"2021-02-27T12:28:12.738Z","comments":true,"path":"posts/16107.html","link":"","permalink":"https://devloperhu.gitee.io/posts/16107.html","excerpt":"","text":"&emsp;&emsp;来上海两个多月了，新的工作也开始了一个多月。 &emsp;&emsp;之前在搜一些技术问题的时候，发现很多大佬都有自己的博客。加上偶尔发现我的发小“老千哥”自己也搭建了博客，用于记录平常的工作问题以及个人的想法，所以我一直也想建立一个属于自己的博客。但是前段时间在上家公司加班有点严重，加上为了找工作复习、投简历，所以没时间搞这件事儿。现在项目不算忙，所以就抽出时间搞了一个属于自己的博客，用来记录下自己的工作上和平时学习上的问题。 &emsp;&emsp;本次博客才用的是Hexo进行搭建的，主题用的是volantis魔改版Volantis-heson。按照作者的指导搭建好之后，将其部署在了GitHub Pages上。 &emsp;&emsp;曾经问过一个大佬在学习上又没有什么习惯或者技巧，他说“我每当解决一个问题之后都会总结并记录下来”。是的自己也深有体会，每次百度半天解决的问题，不做记录的话过一段时间，再遇到一样会去百度半天，可能这就是平常人与大佬们的区别吧。希望自己也能坚持学习，并将解决问题的方法或新学习到的知识记录下来，将来也能成为一个“大佬”，哈哈！ &emsp;&emsp;以某某大佬的一句话作为结尾，以此共勉： &emsp;&emsp;“对任何渴望进步的人来说，写博客/文章/回答对自己的成长帮助都是巨大的。频率和数量不必过分强求，有话要说就写写，没事就歇歇，随意点。因为坚持写作的那一刻起，你就已经开始受益。”","categories":[{"name":"杂记","slug":"杂记","permalink":"https://devloperhu.gitee.io/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[]}],"categories":[{"name":"Linux","slug":"Linux","permalink":"https://devloperhu.gitee.io/categories/Linux/"},{"name":"微服务","slug":"微服务","permalink":"https://devloperhu.gitee.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"},{"name":"Blog","slug":"Blog","permalink":"https://devloperhu.gitee.io/categories/Blog/"},{"name":"杂记","slug":"杂记","permalink":"https://devloperhu.gitee.io/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[{"name":"DOS","slug":"DOS","permalink":"https://devloperhu.gitee.io/tags/DOS/"},{"name":"谷粒商城","slug":"谷粒商城","permalink":"https://devloperhu.gitee.io/tags/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/"},{"name":"Blog","slug":"Blog","permalink":"https://devloperhu.gitee.io/tags/Blog/"}]}